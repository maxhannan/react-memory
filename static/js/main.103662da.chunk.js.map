{"version":3,"sources":["cardsArray.js","Components/MemoryCard.jsx","Components/Cards.jsx","Components/GameOver.jsx","Components/ScoreBoard.jsx","App.js","index.js"],"names":["cardArray","id","uniqid","icon","text","MemoryCard","card","handleClick","className","style","memoryCardStyle","onClick","e","cursor","flexDirection","transition","animation","display","alignItems","justifyContent","height","color","Cards","clickedItems","setClickedItems","endGame","useState","cards","setCards","makeNewCards","NewCards","array","temporaryValue","randomIndex","currentIndex","length","Math","floor","random","shuffle","targetId","target","closest","includes","useEffect","CardGrid","slice","map","GameOver","setGameOver","finalScore","finalCard","maxScore","topScore","containerStyle","gameOverStyle","margin","fontSize","fontWeight","ScoreStyle","btnStyle","padding","borderRadius","border","textAlign","background","Scoreboard","ScoreboardStyle","App","gameOver","setTopScore","setFinalCard","setFinalScore","appStyle","final","find","marginTop","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.103662da.chunk.js","sourcesContent":["import {\n  GiAllSeeingEye, \n  GiAlgae, \n  GiArmadillo, \n  GiBatMask, \n  GiAngularSpider, \n  GiAnglerFish, \n  GiBeaver,\n  GiBuffaloHead,\n  Gi3DHammer,\n  GiAbacus,\n  GiAcid,\n  GiAstronautHelmet,\n  GiAvocado,\n  GiBrain,\n  GiCentaur,\n  GiCobra,\n  GiCommercialAirplane,\n  GiCook,\n  GiDeathSkull,\n  GiDinosaurBones,\n  GiDolphin,\n  GiEarthAmerica,\n  GiElephant,\n  GiFeather\n} from 'react-icons/gi'\nimport uniqid from 'uniqid'\n\nexport const cardArray = [\n  {\n    id: uniqid(),\n    icon: <GiAlgae/>,\n    text: 'Algae'\n  },\n  {\n    id: uniqid(),\n    icon: <GiAllSeeingEye/>,\n    text: 'All Seeing Eye'\n  },\n  {\n    id: uniqid(),\n    icon: <GiArmadillo/>,\n    text: 'Armadillo'\n  },\n  {\n    id: uniqid(),\n    icon: <GiBatMask/>,\n    text: 'Batman'\n  },\n  {\n    id: uniqid(),\n    icon: <GiAngularSpider/>,\n    text: 'Spider'\n  },\n  {\n    id: uniqid(),\n    icon: <GiAnglerFish/>,\n    text: 'Angler Fish'\n  },\n  {\n    id: uniqid(),\n    icon: <GiBeaver/>,\n    text: 'Beaver'\n  },\n  {\n    id: uniqid(),\n    icon: <GiBuffaloHead/>,\n    text: 'Buffalo'\n  },\n  {\n    id: uniqid(),\n    icon: <GiCobra/>,\n    text: 'Cobra'\n  },\n  {\n    id: uniqid(),\n    icon: <GiCentaur/>,\n    text: 'Centaur'\n  },\n  {\n    id: uniqid(),\n    icon: <GiBrain/>,\n    text: 'Brain'\n  },\n  {\n    id: uniqid(),\n    icon: <GiAvocado/>,\n    text: 'Avocado'\n  },\n  {\n    id: uniqid(),\n    icon: <GiAstronautHelmet/>,\n    text: 'Astronaut'\n  },\n  {\n    id: uniqid(),\n    icon: <GiAcid/>,\n    text: 'Acid'\n  },\n  {\n    id: uniqid(),\n    icon: <GiAbacus/>,\n    text: 'Abacus'\n  },\n  {\n    id: uniqid(),\n    icon: <Gi3DHammer/>,\n    text: 'Hammer'\n  },\n  {\n    id: uniqid(),\n    icon: <GiFeather/>,\n    text: 'Feather'\n  },\n  {\n    id: uniqid(),\n    icon: <GiElephant/>,\n    text: 'Elephant'\n  },\n  {\n    id: uniqid(),\n    icon: <GiEarthAmerica/>,\n    text: 'Earth'\n  },\n  {\n    id: uniqid(),\n    icon: <GiDolphin/>,\n    text: 'Dolphin'\n  },\n  {\n    id: uniqid(),\n    icon: <GiDinosaurBones/>,\n    text: 'Dino Bones'\n  },\n  {\n    id: uniqid(),\n    icon: <GiDeathSkull/>,\n    text: 'Skull'\n  },\n  {\n    id: uniqid(),\n    icon: <GiCook/>,\n    text: 'Cook'\n  },\n  {\n    id: uniqid(),\n    icon: <GiCommercialAirplane/>,\n    text: 'Airplane'\n  },\n]\n","\nconst MemoryCard = ({card, handleClick}) => {\n  return ( \n    <div \n    className = 'memoryCard' \n    style = {memoryCardStyle} \n    id = {card.id} \n    onClick = {(e) => handleClick(e)}\n    >\n      {card.icon}\n    </div>\n  );\n}\n \nexport default MemoryCard;\n\nconst memoryCardStyle = {\n  cursor: 'pointer',\n\n  \n  flexDirection: 'column',\n\n  transition: 'transform 250ms ease',\n  animation: 'expand 200ms linear',\n  display: 'flex',\n  alignItems:'center',\n  justifyContent: 'center',\n  height: '100%',\n  color: 'white',\n}\n\n","import {cardArray} from '../cardsArray'\nimport { useEffect, useState } from 'react'\nimport MemoryCard from './MemoryCard'\n\nconst Cards = ({clickedItems, setClickedItems, endGame}) => {\n  const [cards, setCards] = useState(cardArray);\n\n  const shuffle = (array) => {\n    let currentIndex = array.length, temporaryValue, randomIndex;\n    while (0 !== currentIndex) {\n      // Pick a remaining element...\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex -= 1;\n      // And swap it with the current element.\n      temporaryValue = array[currentIndex];\n      array[currentIndex] = array[randomIndex];\n      array[randomIndex] = temporaryValue;\n    }\n    return array;\n  }\n\n  const makeNewCards = (cards) => {\n    const NewCards = [...cards]\n    shuffle(NewCards)\n    setCards(NewCards)\n  }\n\n  const handleClick = (e) => {\n    const targetId = e.target.closest('div').id\n    clickedItems.includes(targetId) ? \n    endGame(targetId) : setClickedItems([...clickedItems, targetId])\n  }\n\n  useEffect(()=>{\n    makeNewCards(cards)\n  },[clickedItems])\n\n  const CardGrid = () => cards.slice(0,9).map(card => (\n    <MemoryCard card = {card} key = {card.id} handleClick = {handleClick}/>\n  ));\n    \n  return ( \n    <div className=\"gridWrapper\" >\n      <CardGrid/>\n    </div>\n  );\n}\n \nexport default Cards;","const GameOver = ({setGameOver, finalScore, finalCard, maxScore, topScore}) => {\n  return ( \n    <div className=\"container\" style = {containerStyle}>\n      <div className=\"gameOver\" style = {gameOverStyle}>\n        <h1 style = {{margin: '10px', fontSize: '35pt', fontWeight: 400}}>Game Over</h1> \n        <h2 style = {ScoreStyle}>Max Score: {maxScore} </h2> \n        <h2 style = {ScoreStyle}>Top Score: {topScore} </h2> \n        <h2 style = {ScoreStyle}>Final Score: {finalScore} </h2>\n        <h2 style = {ScoreStyle}>Final Card: {finalCard.icon} </h2>\n        <button className = 'resetBtn' onClick = {() => setGameOver(false)} style = {btnStyle}>Reset</button>\n      </div>\n    </div>\n    \n  );\n}\n \nexport default GameOver;\n\nconst containerStyle = {\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n  height: '100vh',\n}\n\nconst gameOverStyle = {\n  padding: '30px',\n  borderRadius: '20px',\n  border: '1px solid #ccc',\n  fontSize: '25pt',\n  textAlign: 'center',\n  fontWeight: '400',\n  height: '60vh',\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: 'center',\n  justifyContent: 'space-around'\n\n}\nconst btnStyle = {\n  background: 'transparent', \n  color: 'white',\n  fontSize: '15pt',\n  border: '1px solid white',\n  padding: '10px 15px',\n  borderRadius: '20px',\n  cursor: 'pointer'\n}\n\nconst ScoreStyle = {\n  margin: '10px', \n  fontSize: '25pt', \n  fontWeight: 400\n}","\nconst Scoreboard = ({topScore, clickedItems}) => {\n  return ( \n    <div className=\"scoreBoard\" style = {ScoreboardStyle}>\n  \n       <h1 style = {{margin: '10px', fontSize: '35pt', fontWeight: 300}}>Memory Icons</h1>\n      <div className=\"scores\">\n        <h2 style = {{fontWeight: 300}}>Top Score: {topScore}</h2>\n        <h2 style = {{fontWeight: 300}}>Current Score: {clickedItems.length}</h2>\n      </div>\n    </div>\n  );\n}\n \nexport default Scoreboard;\n\nconst ScoreboardStyle = { \n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: 'center',\n}\n\n","\nimport { useEffect, useState } from 'react'\nimport Cards from './Components/Cards'\nimport GameOver from './Components/GameOver'\nimport Scoreboard from './Components/ScoreBoard'\nimport {cardArray} from './cardsArray'\n\nfunction App() {\n  const [clickedItems, setClickedItems] = useState([])\n  const [gameOver, setGameOver] = useState(false)\n  const [topScore, setTopScore] = useState(0)\n  const [finalCard, setFinalCard] = useState({})\n  const [finalScore, setFinalScore] = useState(0)\n \n  const endGame = (targetId)=> {\n    const final = cardArray.find(card => card.id === targetId);\n    setFinalCard(final)\n    setGameOver(true)\n    setFinalScore(clickedItems.length)\n    setClickedItems([])\n  }\n  useEffect(()=>{\n    if(topScore < clickedItems.length){\n      setTopScore(clickedItems.length)\n    }\n  },[ clickedItems ])\n  \n  return (\n    <div className=\"App\" style = {appStyle}>\n      \n        {gameOver && \n        <GameOver \n          maxScore = {cardArray.length}\n          setGameOver = {setGameOver}\n          finalCard = {finalCard} \n          finalScore = {finalScore}\n          topScore = {topScore}\n        />\n        }\n        {!gameOver && \n        <>\n        <Scoreboard clickedItems = {clickedItems} topScore = {topScore} />\n        <Cards \n          endGame = {endGame} \n          clickedItems = { clickedItems } \n          setClickedItems = {setClickedItems}\n        /> \n        </>\n        }\n    </div>\n  );\n}\n\nexport default App;\n\nconst appStyle ={\n  display: 'flex',\n  flexDirection: 'column',\n  justifyContent: 'center',\n  marginTop: '1em',\n  alignItems: 'center',\n  color: 'white'\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}